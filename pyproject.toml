[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "minillm"
version = "0.1.0"
description = "Transformer-based language model implementation based on LLaMA architecture"
authors = [
    {name = "Richard Sprague", email = "richard@richardsprague.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.21.0",
    "tokenizers>=0.13.0",
    "transformers>=4.20.0",
    "pandas>=1.3.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "omegaconf>=2.3.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "safetensors>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]
performance = [
    "flash-attn>=2.0.0",
    "bitsandbytes>=0.40.0",
    "intel-extension-for-pytorch",
]
eval = [
    "lm-eval>=0.4.0",
    "wandb>=0.15.0",
    "tensorboard>=2.10.0",
]
web = [
    "streamlit>=1.25.0",
    "gradio>=3.40.0",
]

[project.scripts]
llm-chat = "minillm.cli:chat_main"
llm-finetune = "minillm.cli:finetune_main"
llm-serve = "minillm.cli:serve_main"

[project.urls]
Homepage = "https://github.com/richardsprague/minillm"
Repository = "https://github.com/richardsprague/minillm"
Issues = "https://github.com/richardsprague/minillm/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["minillm*"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ['py38']